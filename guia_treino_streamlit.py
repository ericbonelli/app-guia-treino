import streamlit as st
import datetime
import requests
from datetime import datetime as dt

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Guia de Treino e Alimenta√ß√£o", layout="wide")
st.title("üìò Guia de Treino + Alimenta√ß√£o Di√°ria")
st.markdown("Acompanhe sua rotina de treinos e alimenta√ß√£o. Marque os itens conclu√≠dos e salve seu progresso!")

# Dia da semana (padr√£o: hoje)
dias_semana = ["Segunda-feira", "Ter√ßa-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "S√°bado", "Domingo"]
hoje_pt = dias_semana[datetime.datetime.today().weekday()]
dia = st.selectbox("üìÖ Escolha o dia da semana", dias_semana, index=dias_semana.index(hoje_pt))

# Card√°pio com jejum seg/qua/sex
cardapio = {
    "Segunda-feira": [
        ("Jejum", "Dia de jejum com at√© 500 calorias"),
        ("Almo√ßo", "150g frango grelhado + 80g arroz integral + salada com azeite"),
        ("Lanche", "Whey protein com √°gua ou iogurte desnatado com morangos"),
        ("Jantar", "Omelete 4 ovos ou wrap integral com frango e ricota")
    ],
    "Ter√ßa-feira": [
        ("Caf√© da manh√£", "2 ovos + p√£o integral + queijo branco"),
        ("Almo√ßo", "Fil√© de frango + arroz integral + feij√£o + legumes + salada"),
        ("Lanche", "Whey com √°gua ou iogurte desnatado + morangos ou wrap"),
        ("Jantar", "Omelete ou wrap integral com carne mo√≠da e vegetais")
    ],
    "Quarta-feira": [
        ("Jejum", "Dia de jejum com at√© 500 calorias"),
        ("Almo√ßo", "Frango grelhado + arroz + legumes + azeite"),
        ("Lanche", "Iogurte ou p√£o com frango e requeij√£o light"),
        ("Jantar", "Wrap de Rap10 com carne mo√≠da + alface + tomate")
    ],
    "Quinta-feira": [
        ("Caf√© da manh√£", "Shake de whey + frutas vermelhas + linha√ßa"),
        ("Almo√ßo", "Peixe ou carne + arroz integral + legumes + salada"),
        ("Lanche", "Whey com morangos ou p√£o integral com prote√≠na"),
        ("Jantar", "Omelete ou prato leve com prote√≠na + salada")
    ],
    "Sexta-feira": [
        ("Jejum", "Dia de jejum com at√© 500 calorias"),
        ("Almo√ßo", "Frango grelhado + arroz integral + legumes + salada"),
        ("Lanche", "Whey com morangos ou iogurte com whey"),
        ("Jantar", "Wrap ou omelete com folhas verdes e azeite")
    ],
    "S√°bado": [
        ("Caf√© da manh√£", "Crepioca de queijo cottage + caf√©"),
        ("Almo√ßo", "Peito de frango ao forno + arroz integral + salada"),
        ("Lanche", "Mix de nozes + suco de laranja natural"),
        ("Jantar", "Til√°pia assada + legumes + azeite")
    ],
    "Domingo": [
        ("Caf√© da manh√£", "Cuscuz com ovo mexido + caf√©"),
        ("Almo√ßo", "Peixe grelhado + batata-doce + salada"),
        ("Lanche", "Iogurte + frutas"),
        ("Jantar", "Sopa de legumes com frango desfiado")
    ]
}

# Treinos muscula√ß√£o
treinos = {
    "A - Pernas e Core": [
        ("Agachamento Livre", "https://www.youtube.com/watch?v=1oed-UmAxFs"),
        ("Leg Press 45¬∞", "https://www.youtube.com/watch?v=IZxyjW7MPJQ"),
        ("Stiff com Halteres", "https://www.youtube.com/watch?v=6P2QcD3jN8w"),
        ("Afundo com Passada", "https://www.youtube.com/watch?v=QF0BQS2W80k"),
        ("Eleva√ß√£o de Panturrilha", "https://www.youtube.com/watch?v=-M4-G8p8fmc"),
        ("Prancha Abdominal", "https://www.youtube.com/watch?v=ASdvN_XEl_c")
    ],
    "B - Peito, Tr√≠ceps e Ombros": [
        ("Supino Reto com Barra", "https://www.youtube.com/watch?v=rT7DgCr-3pg"),
        ("Supino Inclinado com Halteres", "https://www.youtube.com/watch?v=8iPEnn-ltC8"),
        ("Desenvolvimento Militar", "https://www.youtube.com/watch?v=B-aVuyhvLHU"),
        ("Tr√≠ceps Testa", "https://www.youtube.com/watch?v=6SS6K3lAwZ8"),
        ("Tr√≠ceps Corda no Cross", "https://www.youtube.com/watch?v=vB5OHsJ3EME"),
        ("Abdominal Obl√≠quo", "https://www.youtube.com/watch?v=E4h40NOUOHM")
    ],
    "C - Costas e B√≠ceps": [
        ("Barra Fixa", "https://www.youtube.com/watch?v=HRVvH5u6SGc"),
        ("Remada Curvada com Barra", "https://www.youtube.com/watch?v=vT2GjY_Umpw"),
        ("Pulldown na Polia", "https://www.youtube.com/watch?v=CAwf7n6Luuc"),
        ("Rosca Direta com Barra EZ", "https://www.youtube.com/watch?v=kwG2ipFRgfo"),
        ("Rosca Martelo com Halteres", "https://www.youtube.com/watch?v=zC3nLlEvin4"),
        ("Hiperextens√£o Lombar", "https://www.youtube.com/watch?v=ph3pddpKzzw")
    ]
}

# Card√°pio com checkbox
st.subheader("üçΩÔ∏è Card√°pio do Dia")
refeicoes_dia = []
for refeicao, descricao in cardapio[dia]:
    marcado = st.checkbox(f"{refeicao}: {descricao}", key=f"ref_{refeicao}_{dia}")
    if marcado:
        refeicoes_dia.append(f"{refeicao}: {descricao}")

# Treinos com checkbox
st.subheader("üèãÔ∏è Exerc√≠cios de Muscula√ß√£o")
tipo_treino = st.selectbox("Escolha o tipo de treino", list(treinos.keys()))
treinos_dia = []
for exercicio, link in treinos[tipo_treino]:
    marcado = st.checkbox(f"[{exercicio}]({link})", key=f"ex_{exercicio}_{dia}")
    if marcado:
        treinos_dia.append(exercicio)

# Cardio do dia
st.subheader("üèÉ Cardio")
cardio_dia = []
if dia in ["Segunda-feira", "S√°bado", "Domingo"]:
    if st.checkbox("Corrida (30-40min)", key=f"corrida_{dia}"):
        cardio_dia.append("Corrida")
if dia in ["Ter√ßa-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira"]:
    if st.checkbox("Nata√ß√£o (45min)", key=f"natacao_{dia}"):
        cardio_dia.append("Nata√ß√£o")

# Envio √∫nico
st.markdown("### üì§ Salvar e Enviar")
if st.button("üì§ Enviar Dia para Registro"):
    webhook_url = "https://1bfd4a66ff01.ngrok-free.app/webhook/guia-treino"
    payload = {
        "dia": dia,
        "refeicoes": refeicoes_dia,
        "treino": treinos_dia,
        "cardio": cardio_dia,
        "timestamp": dt.now().isoformat()
    }
    try:
        r = requests.post(webhook_url,json=payload,headers={"Content-Type": "application/json"})
        if r.status_code == 200:
            st.success("‚úÖ Dados enviados com sucesso ao n8n!")
        else:
            st.warning(f"‚ö†Ô∏è Erro {r.status_code} ao enviar para o n8n.")
    except Exception as e:
        st.error(f"Erro ao conectar com webhook: {e}")

st.markdown("---")
st.caption("üîÅ Integra√ß√£o futura com painel hist√≥rico e analytics | Desenvolvido com ‚ù§Ô∏è no Streamlit")
